services:
  realtimedb:
    container_name: realtimedb
    #restart: always
    ports:
      - "5432:5432"
    #volumes:
    #  - ./data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  zookeeper:
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  
  kafka:
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 5000
      KAFKA_BROKER_ID: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
    depends_on:
      - zookeeper
      
  # redis:
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

  # app:
  #   build: .
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     SPRING_PROFILE_ACTIVE: dev
  #     SPRING_DATASOURCE_URL: "jdbc:postgresql://db:5432/postgres"
  #     SPRING_REDIS_HOST: cache
  #     SPRING_REDIS_PORT: 6379
  #   depends_on:
  #     - db
  #     - cache


  realtime.socket:
    container_name: realtime.socket
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
    depends_on:
      - realtimedb

  realtime.ui:
    container_name: realtime.ui
    environment:
      NODE_ENV: production
    ports:
      - 4200:4200
    depends_on:
      - realtime.socket